version: "3"
services:
  influxdb:
    image: influxdb:2.6
    container_name: influxdb
    environment:
      - TZ=America/Jamaica
      - INFLUXD_REPORTING_DISABLED=true
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD} # set in .env
      - DOCKER_INFLUXDB_INIT_ORG=ensom
      - DOCKER_INFLUXDB_INIT_BUCKET=solar

    ports:
      - 8086:8086
#    networks:
#      - fatheadl-net
    volumes:
      - /opt/influxdb2/data:/var/lib/influxdb2
      - /opt/influxdb2/config:/etc/influxdb2:ro
    restart:
      unless-stopped
      
  grafana:
    image: grafana/grafana:9.3.6
    container_name: grafana
    environment:
      - TZ=${TIMEZONE}
      - GF_SERVER_DOMAIN=${PUBLIC_DOMAIN}
    user: "0"
    ports:
      - 3000:3000
    volumes:
      - /opt/grafana:/var/lib/grafana
      - /opt/grafana/provisioning:/etc/grafana/provisioning
      - /opt/grafana/grafana.ini:/etc/grafana/grafana.ini
      - /opt/grafana/dashboards:/etc/grafana/dashboards
    restart:
      unless-stopped
 #   networks:
 #     - fatheadl-net      
    labels:
      - traefik.enable=true
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.rule=Host(`graf.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.grafana.entrypoints=websecure
        #      - traefik.http.routers.homeassistant.tls=true
      - traefik.http.routers.grafana.tls.certresolver=le
      - traefik.docker.network=fatheadl-net
      
  node-red:
 #   depends_on:
 #      - broker
    container_name: node-red
    image: nodered/node-red:3.0.2
    environment:
    #      - SET_CONTAINER_TIMEZONE=true
    #      - CONTAINER_TIMEZONE=${TIMEZONE}
      - TZ=${TIMEZONE}
    volumes:
      - "/opt/node-red:/data"
    user: "0"
    restart: unless-stopped
    network_mode: host
#    networks:
#      - fatheadl-net
#    ports:
#      - "1880:1880"

    labels:
      - traefik.enable=true
      - traefik.http.services.node-red.loadbalancer.server.port=1880
      - traefik.http.routers.node-red.rule=Host(`nr.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.node-red.entrypoints=websecure
#      - traefik.http.routers.homeassistant.tls=true
      - traefik.http.routers.node-red.tls.certresolver=le
      - traefik.docker.network=fatheadl-net
      
  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt:1.30.0
    volumes:
      - /opt/zigbee2mqtt-data:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8880:8080
 #   networks:
 #     - fatheadl-net
    environment:
      - TZ=${TIMEZONE}
#    devices:
#      - /dev/serial/by-id/usb-ITead_Sonoff_Zigbee_3.0_USB_Dongle_Plus_32671b6053c8eb11a8f8c5c3de5b81b4-if00-port0:/dev/ttyUSB0
    labels:
      - traefik.enable=true
      - traefik.http.services.zigbee2mqtt.loadbalancer.server.port=8080
      - traefik.http.routers.zigbee2mqtt.rule=Host(`z2m.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.zigbee2mqtt.entrypoints=websecure
#      - traefik.http.routers.homeassistant.tls=true
      - traefik.http.routers.zigbee2mqtt.tls.certresolver=le
      - traefik.docker.network=fatheadl-net
      
  emqx1:
    image: emqx:5.0.16
    container_name: emqx1
    environment:
    - TZ=${TIMEZONE}
    healthcheck:
      test: ["CMD", "/opt/emqx/bin/emqx_ctl", "status"]
      interval: 5s
      timeout: 25s
      retries: 5
    #networks:
    user: "0"
    volumes:
      - /opt/emqx/data:/opt/emqx/data
      - /opt/emqx/log:/opt/emqx/log
      - /opt/emqx/etc:/opt/emqx/etc

    ports:
      - 1883:1883
      - 8083:8083
      - 8084:8084
      - 8883:8883
      - 18083:18083
    labels:
      - traefik.enable=true
      - traefik.http.services.emqx1.loadbalancer.server.port=18083
      - traefik.http.routers.emqx1.rule=Host(`emqx.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.emqx1.entrypoints=websecure
#      - traefik.http.routers.homeassistant.tls=true
      - traefik.http.routers.emqx1.tls.certresolver=le
      - traefik.docker.network=fatheadl-net      
      
  homeassistant:
    container_name: homeassistant
    #    image: homeassistant/raspberrypi4-homeassistant:stable
    image: homeassistant/home-assistant:2023.2.1
    environment:
      - TZ=${TIMEZONE}
#    networks:
#      - fatheadl-net
    network_mode: host
#    ports:
#      - "8123:8123"
    volumes:
      - /opt/homeassistant:/config
#      - /etc/localtime:/etc/localtime:ro
#      - /etc/letsencrypt:/etc/letsencrypt:ro
#    devices:
            #      - /dev/ttyACM0:/dev/ttyACM0:rwm
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8123"]
      interval: 30s
      timeout: 10s
      retries: 6

    labels:
      - traefik.enable=true
      - traefik.http.services.homeassistant.loadbalancer.server.port=8123
      - traefik.http.routers.homeassistant.rule=Host(`ha.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.homeassistant.entrypoints=websecure
        #      - traefik.http.routers.homeassistant.tls=true
      - traefik.http.routers.homeassistant.tls.certresolver=le
      - traefik.docker.network=fatheadl-net
      
  homebridge:
    image: ghcr.io/oznu/homebridge:ubuntu
    container_name: homebridge
    environment:
      - TZ=${TIMEZONE}
      - PGID=1000
      - PUID=1000
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8581
    volumes:
      - /opt/homebridge:/homebridge
#    ports:
#      - 8080:8080
#      - 8181:8181
#      - 51826:51826
    restart: unless-stopped
    network_mode: host
    labels:
      - traefik.enable=true
      - traefik.http.services.homebridge.loadbalancer.server.port=8581
      - traefik.http.routers.homebridge.rule=Host(`hb.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.homebridge.entrypoints=websecure
#      - traefik.http.routers.hoobs.service=hoobs
      - traefik.http.routers.homebridge.tls.certresolver=le
      - traefik.docker.network=fatheadl-net
      
  gitea:
    image: gitea/gitea:1.18.3
    container_name: gitea
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: unless-stopped
 #   networks:
 #     - fatheadl-net
    volumes:
      - /opt/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "3030:3000"
      - "222:22"
    labels:
      - traefik.enable=true
      - traefik.http.services.gitea.loadbalancer.server.port=3000
      - traefik.http.routers.gitea.rule=Host(`gitea.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.gitea.entrypoints=websecure
#      - traefik.http.routers.hoobs.service=hoobs
      - traefik.http.routers.gitea.tls.certresolver=le
      - traefik.docker.network=fatheadl-net
      
  vaultwarden:
    image: vaultwarden/server:1.27.0
    container_name: vaultwarden
    restart: always
    environment:
      WEBSOCKET_ENABLED: "true"  # Enable WebSocket notifications.
    ports:
      - "8080:80"
      - "3012:3012"
    volumes:
      - /opt/vw-data:/data
    labels:
      - traefik.enable=true
      - traefik.http.services.vaultwarden.loadbalancer.server.port=80
      - traefik.http.routers.vaultwarden.rule=Host(`vault.${PUBLIC_DOMAIN}`)
      - traefik.http.routers.vaultwarden.entrypoints=websecure
      - traefik.http.routers.vaultwarden.service=vaultwarden
      - traefik.http.routers.vaultwarden.tls.certresolver=le
      - traefik.http.services.vaultwarden-watch.loadbalancer.server.port=3012
      - traefik.http.routers.vaultwarden-watch.rule=Host(`vault.${PUBLIC_DOMAIN}`) && Path(`/notifications/hub`)
      - traefik.http.routers.vaultwarden-watch.entrypoints=websecure
      - traefik.http.routers.vaultwarden-watch.tls.certresolver=le
      - traefik.http.routers.vaultwarden-watch.service=vaultwarden-watch
      - traefik.docker.network=fatheadl-net
      
      
      
networks:
  default:
    name: fatheadl-net
    
